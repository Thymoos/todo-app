{"version":3,"sources":["images/icon-sun.svg","images/icon-moon.svg","components/ThemeControl.js","images/icon-cross.svg","components/FilterControl.js","components/TaskList.js","components/AddTask.js","App.js","index.js"],"names":["ThemeControl","useState","theme","setTheme","className","src","moonThemeIcon","sunThemeIcon","alt","onClick","body","document","FilterControl","activeTasks","clearCompletedTasks","handleFilterChange","type","name","id","defaultChecked","htmlFor","defaultTaskList","text","completed","TaskList","newTask","tasks","setTasks","filter","task","setActiveTasks","completedTasks","setCompletedTasks","filterPosition","setFilterPosition","useEffect","newTaskObject","length","prevTasks","getElementById","checked","handleTaskCompletion","e","htmlForId","target","newTodos","realIndex","findIndex","handleTaskDelete","taskId","splice","map","index","deleteBtn","i","hasOwnProperty","newPosition","AddTask","setNewTask","newTaskText","value","setTimeout","spellCheck","maxLength","placeholder","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ac7c39e9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","import React, {useState} from 'react';\r\nimport './ThemeControl.css';\r\n\r\nimport sunThemeIcon from '../images/icon-sun.svg';\r\nimport moonThemeIcon from '../images/icon-moon.svg';\r\n\r\nconst ThemeControl = () => {\r\n\r\n    const [theme, setTheme] = useState(false);\r\n\r\n    const handleThemeChange = () => {\r\n        const body = document.body;\r\n        \r\n        body.className = \"\";\r\n        \r\n        if (theme === false) {\r\n            body.className = \"light-theme\";\r\n            setTheme(true);\r\n        }\r\n        else {\r\n            body.className = \"dark-theme\";\r\n            setTheme(false);\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div className=\"title-wrapper\">\r\n            <h1>TODO</h1>\r\n            <button>\r\n                <img src={theme ? moonThemeIcon : sunThemeIcon} alt=\"Theme icon\" \r\n                onClick={handleThemeChange}\r\n            /></button> \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ThemeControl;","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import React from 'react';\r\nimport './FilterControl.css';\r\n\r\nconst FilterControl = ({activeTasks, clearCompletedTasks, handleFilterChange}) => {\r\n\r\n    return ( \r\n        <div className=\"filter-wrapper\">\r\n            <p>{activeTasks} items left</p>\r\n            <div className=\"filter-options\">\r\n\r\n                <input type=\"radio\" name=\"filter-group\" id=\"all\" defaultChecked onClick={handleFilterChange}/><label htmlFor=\"all\">All</label>\r\n                <input type=\"radio\" name=\"filter-group\" id=\"active\" onClick={handleFilterChange}/><label htmlFor=\"active\">Active</label>\r\n                <input type=\"radio\" name=\"filter-group\" id=\"completed\" onClick={handleFilterChange}/><label htmlFor=\"completed\">Completed</label>\r\n\r\n            </div>\r\n            <p onClick={clearCompletedTasks}>Clear completed</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default FilterControl;","import React, {useState, useEffect} from 'react';\r\nimport './TaskList.css';\r\n\r\nimport deleteBtn from '../images/icon-cross.svg';\r\n\r\nimport FilterControl from './FilterControl';\r\n\r\nconst defaultTaskList = [\r\n    {\r\n        id: 0,\r\n        text: \"Do the laundry\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 1,\r\n        text: \"Finish todo-app\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 2,\r\n        text: \"Try to look good\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 3,\r\n        text: \"Woo some girls\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 4,\r\n        text: \"Order pizza\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 5,\r\n        text: \"Check mail\",\r\n        completed: false\r\n    }\r\n];\r\n\r\nconst TaskList = ({newTask}) => {\r\n\r\n    const [tasks, setTasks] = useState(defaultTaskList);\r\n    const [activeTasks, setActiveTasks] = useState(tasks.filter(task => task.completed === false));\r\n    const [completedTasks, setCompletedTasks] = useState(tasks.filter(task => task.completed === true));\r\n    const [filterPosition, setFilterPosition] = useState(tasks);\r\n\r\n    useEffect(() => {\r\n\r\n        if(newTask !== \"\"){\r\n        const newTaskObject = {\r\n            id: tasks.length,\r\n            text: newTask,\r\n            completed: false\r\n        }\r\n\r\n        setTasks(prevTasks => [...prevTasks, newTaskObject])}\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [newTask]);\r\n\r\n    useEffect(() => {\r\n        setFilterPosition(tasks);\r\n        \r\n        const radio = document.getElementById(\"all\");\r\n        \r\n        radio.checked = true;\r\n    }, [tasks])\r\n\r\n    const handleTaskCompletion = (e) => {\r\n        const htmlForId = e.target.htmlFor;\r\n\r\n        const newTodos = [...tasks];\r\n\r\n        // eslint-disable-next-line eqeqeq\r\n        const realIndex = newTodos.findIndex(task => task.id == htmlForId);\r\n        \r\n        newTodos[realIndex].completed = !newTodos[realIndex].completed; \r\n\r\n        setTasks(newTodos);\r\n        setActiveTasks(tasks.filter(task => task.completed === false));\r\n        setCompletedTasks(tasks.filter(task => task.completed === true));\r\n    }\r\n\r\n    const handleTaskDelete = (e) => {\r\n        const taskId = e.target.id;\r\n        \r\n        const newTodos = [...tasks];\r\n\r\n        newTodos.splice(taskId, 1);\r\n\r\n        setTasks(newTodos);\r\n        setActiveTasks(tasks.filter(task => task.completed === false));\r\n        setCompletedTasks(tasks.filter(task => task.completed === true));\r\n    }\r\n\r\n    const clearCompletedTasks = () => {\r\n        const completedTasks = tasks.filter(task => task.completed===true);\r\n        const newTodos = [...tasks];\r\n\r\n        for(var i = 0; i < completedTasks.length; i++){\r\n            const id = completedTasks[i].id;\r\n\r\n            const index = newTodos.findIndex((task, index) => {\r\n                if (task.hasOwnProperty(\"id\")){\r\n                if (task.id === id) {return true}\r\n                else return false;\r\n           \r\n            } else return false})\r\n            newTodos.splice(index, 1);\r\n        }\r\n\r\n         setTasks(newTodos);\r\n          setActiveTasks(tasks.filter(task => task.completed === false));\r\n          setCompletedTasks(tasks.filter(task => task.completed === true));\r\n    }\r\n\r\n    const handleFilterChange = (e) => {\r\n        const newPosition = e.target.id;\r\n\r\n        if (newPosition === \"all\") setFilterPosition(tasks);\r\n        else if (newPosition === \"active\") setFilterPosition(activeTasks);\r\n        else setFilterPosition(completedTasks);\r\n    }\r\n\r\n    return ( \r\n        <div className=\"shadow-main\">\r\n        <div className=\"task-list\">\r\n            \r\n            {filterPosition.map((task, index) => (\r\n                <div className=\"task\" key={task.id}>\r\n                    <input type=\"checkbox\" name=\"value\" id={task.id} defaultChecked={task.completed ? true : false}/>\r\n                    <label htmlFor={task.id} onClick={handleTaskCompletion}></label>\r\n                    <p className={task.completed ? \"completed\" : \"\"}>{task.text}</p>\r\n                    <img src={deleteBtn} alt=\"X\" id={index} onClick={handleTaskDelete}/>\r\n                </div>\r\n            ))}\r\n\r\n        </div>\r\n        <FilterControl \r\n        activeTasks={tasks.filter(task => task.completed===false).length}\r\n        clearCompletedTasks={clearCompletedTasks}\r\n        handleFilterChange={handleFilterChange}\r\n        />\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default TaskList;","import React, {useState} from 'react';\r\nimport './AddTask.css'\r\nimport ThemeControl from './ThemeControl';\r\nimport TaskList from './TaskList';\r\n\r\nconst AddTask = () => {\r\n\r\n    const [newTask, setNewTask] = useState(\"\");\r\n\r\n    const handleNewTask = () => {\r\n\r\n        const newTaskText = document.getElementById(\"text\").value;\r\n\r\n        setNewTask(newTaskText);\r\n\r\n        document.getElementById(\"text\").value = \"\";\r\n\r\n        setTimeout(() => {\r\n            document.getElementById(\"input\").checked = false;\r\n        }, 1500);\r\n    }\r\n\r\n    return ( \r\n        <>\r\n        <div className=\"addTask\">\r\n\r\n            <ThemeControl/>\r\n\r\n            <input className=\"checkbox\" type=\"checkbox\"  name=\"value\" id=\"input\"/>\r\n            <label htmlFor=\"input\" onClick={handleNewTask}></label>\r\n            <input id=\"text\" type=\"text\" spellCheck=\"false\" maxLength=\"45\" placeholder=\"Create a new todo...\"/>\r\n\r\n        </div>\r\n\r\n        <TaskList newTask={newTask}/>\r\n\r\n        </>\r\n     );\r\n}\r\n \r\nexport default AddTask;","import './App.css';\nimport AddTask from './components/AddTask';\n\nfunction App() {\n  return (\n    <>\n    <div className=\"background-image\"></div>\n    <AddTask/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}